using System;
using System.Collections.Generic;
using System.Windows.Media.Animation;
using NUnit.Framework;
using ColorVisor.Classes;

namespace Tests
{
    public class DataItem
    {
        public DataItem()
        {
            color = new List<AdvColor>();
        }
        public List<AdvColor> color;
        public double De2000;
    }

    public class ColorCalcTest
    {
        private List<DataItem> DataSet;
        [SetUp]
        public void Setup()
        {
            DataSet = new List<DataItem>();
            var Li = new List<double> { 50.0000, 50.0000, 50.0000, 50.0000, 50.0000, 50.0000, 50.0000, 50.0000, 50.0000, 50.0000, 50.0000, 50.0000, 50.0000, 50.0000, 50.0000, 50.0000, 50.0000, 50.0000, 50.0000, 50.0000, 50.0000, 50.0000, 50.0000, 50.0000, 50.0000, 50.0000, 50.0000, 50.0000, 50.0000, 50.0000, 50.0000, 50.0000, 50.0000, 73.0000, 50.0000, 61.0000, 50.0000, 56.0000, 50.0000, 58.0000, 50.0000, 50.0000, 50.0000, 50.0000, 50.0000, 50.0000, 50.0000, 50.0000, 60.2574, 60.4626, 63.0109, 62.8187, 61.2901, 61.4292, 35.0831, 35.0232, 22.7233, 23.0331, 36.4612, 36.2715, 90.8027, 91.1528, 90.9257, 88.6381, 6.7747, 5.8714, 2.0776, 0.9033 };
            var ai = new List<double> { 2.6772, 0.0000, 3.1571, 0.0000, 2.8361, 0.0000, -1.3802, 0.0000, -1.1848, 0.0000, -0.9009, 0.0000, 0.0000, -1.0000, -1.0000, 0.0000, 2.4900, -2.4900, 2.4900, -2.4900, 2.4900, -2.4900, 2.4900, -2.4900, -0.0010, 0.0009, -0.0010, 0.0010, -0.0010, 0.0011, 2.5000, 0.0000, 2.5000, 25.0000, 2.5000, -5.0000, 2.5000, -27.0000, 2.5000, 24.0000, 2.5000, 3.1736, 2.5000, 3.2972, 2.5000, 1.8634, 2.5000, 3.2592, -34.0099, -34.1751, -31.0961, -29.7946, 3.7196, 2.2480, -44.1164, -40.0716, 20.0904, 14.9730, 47.8580, 50.5065, -2.0831, -1.6435, -0.5406, -0.8985, -0.2908, -0.0985, 0.0795, -0.0636 };
            var bi = new List<double> { -79.7751, -82.7485, -77.2803, -82.7485, -74.0200, -82.7485, -84.2814, -82.7485, -84.8006, -82.7485, -85.5211, -82.7485, 0.0000, 2.0000, 2.0000, 0.0000, -0.0010, 0.0009, -0.0010, 0.0010, -0.0010, 0.0011, -0.0010, 0.0012, 2.4900, -2.4900, 2.4900, -2.4900, 2.4900, -2.4900, 0.0000, -2.5000, 0.0000, -18.0000, 0.0000, 29.0000, 0.0000, -3.0000, 0.0000, 15.0000, 0.0000, 0.5854, 0.0000, 0.0000, 0.0000, 0.5757, 0.0000, 0.3350, 36.2677, 39.4387, -5.8663, -4.0864, -5.3901, -4.9620, 3.7933, 1.5901, -46.6940, -42.5619, 18.3852, 21.2231, 1.4410, 0.0447, -0.9208, -0.7239, -2.4247, -2.2286, -1.1350, -0.5514 };
            var dE2000 = new List<double> { 2.0425, 2.8615, 3.4412, 1.0000, 1.0000, 1.0000, 2.3669, 2.3669, 7.1792, 7.1792, 7.2195, 7.2195, 4.8045, 4.8045, 4.7461, 4.3065, 27.1492, 22.8977, 31.9030, 19.4535, 1.0000, 1.0000, 1.0000, 1.0000, 1.2644, 1.2630, 1.8731, 1.8645, 2.0373, 1.4146, 1.4441, 1.5381, 0.6377, 0.9082 };
            int deindex = 0;
            for (var i = 0; i < 68; i += 2)
            {
                DataItem data = new DataItem();
                data.color.Add(new AdvColor(Li[i], ai[i], bi[i]));
                data.color.Add(new AdvColor(Li[i + 1], ai[i + 1], bi[i + 1]));
                data.De2000 = dE2000[deindex++];
                DataSet.Add(data);
            }
        }

        [Test]
        public void Test1()
        {
            foreach (var item in DataSet)
            {
                Assert.AreEqual(item.De2000, ColorCalc.DeltaE2000(item.color[0], item.color[1]), 1e-3);
            }
        }
    }
}